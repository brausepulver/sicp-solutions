#lang racket

(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))
(define (sine angle)
    (if (not (> (abs angle) 0.1))
        angle
        (p (sine (/ angle 3.0)))))

; (sine 12.15)
; (p (sine 4.05))
; (p (sine 1.35))
; (p (sine 0.45))
; (p (sine 0.15))
; (p (sine 0.05))

; When (sine 12.15) is evaluated, the procedure p is applied 5 times.

; In general, the number of steps is proportional to R(a) = ceil(log_3(a) - log_3(0.1)).
; Therefore there exist k_1, k_2 such that k_1 log(a) <= R(a) <= k_2 log(a), so that R(a) has the or-
; der of growth Theta(log a).

; The order of growth in space is Theta(log a) as well, because the process generated by the procedure
; is linear recursive.
